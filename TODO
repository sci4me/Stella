 - Entities
   - Item Entities
   - Other Entities? (eventually, TM)
 - Organization
   - Probably only want one level of subdirectory in `src`
 - Shader Abstraction
   - Bind/Unbind
   - Ability to handle uniforms
 - Framebuffer abstraction
   - "Just a wrapper" for OpenGL framebuffers
     - Ability to create and destroy them
     - Ability to bind and unbind them
     - Ability to configure what buffers/textures are attached to the FBO
       - i.e.  attach a texture to `GL_COLOR_ATTACHMENT0`
 - Logging !!!
   - Configurable (?)
   - Console Logging
   - File Logging
   - printf style API
 - Combine `batch` and `chunk` shaders?
   - Maybe not; I'm not sure if this is a good idea or not
     - Maybe it will be in the short term but we'll have to change it later on anyway?
     - Maybe we can just use a single shader and just pass it the data it needs to handle the cases instead of using multiple shaders?
       - Definitely not once we start doing less-than-trivial things
         - Lighting
         - OpenGL in ImGui
   - So, yeah uhm, maybe don't combine them? I don't even know.
 - Main Menu
   - Ability to create new worlds, load saved worlds, edit settings, and quit
 - Save Games
   - This ties into chunk management pretty significantly
     - In a real-world scenario, whenever we want to _get_ a chunk
       We first need to check if that chunk already exists, possibly in a cache, or on disk
       If not, only then do we generate it.
     - Whenever we want to unload a chunk, say because the player walked away from it,
       we need to serialize it to disk somehow. Or possibly a chunk cache, before disk.
 - Audio
 - Particle Systems